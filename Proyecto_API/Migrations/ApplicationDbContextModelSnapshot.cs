// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Proyecto_API.Data;

#nullable disable

namespace ProyectoAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Proyecto_API.Modelos.instrumentos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("cantidad")
                        .HasColumnType("integer");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("fechaActualizacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("fechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("imagenUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("precio")
                        .HasColumnType("double precision");

                    b.HasKey("id");

                    b.ToTable("instrumentos");

                    b.HasData(
                        new
                        {
                            id = 1,
                            cantidad = 10,
                            descripcion = "Guitarra color café con cuerdas de metal",
                            fechaActualizacion = new DateTimeOffset(new DateTime(2024, 8, 7, 21, 37, 49, 796, DateTimeKind.Unspecified).AddTicks(6573), new TimeSpan(0, -5, 0, 0, 0)),
                            fechaCreacion = new DateTimeOffset(new DateTime(2024, 8, 8, 2, 37, 49, 796, DateTimeKind.Unspecified).AddTicks(6571), new TimeSpan(0, 0, 0, 0, 0)),
                            imagenUrl = "",
                            nombre = "Guitarra",
                            precio = 5.0
                        },
                        new
                        {
                            id = 2,
                            cantidad = 5,
                            descripcion = "Saxofon alto color negro Yamaha yas 23",
                            fechaActualizacion = new DateTimeOffset(new DateTime(2024, 8, 7, 21, 37, 49, 796, DateTimeKind.Unspecified).AddTicks(6602), new TimeSpan(0, -5, 0, 0, 0)),
                            fechaCreacion = new DateTimeOffset(new DateTime(2024, 8, 7, 21, 37, 49, 796, DateTimeKind.Unspecified).AddTicks(6601), new TimeSpan(0, -5, 0, 0, 0)),
                            imagenUrl = "",
                            nombre = "Saxofon",
                            precio = 10.5
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
